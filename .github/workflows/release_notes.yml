name: Generate Release Notes
on:
  push:
    branches:
      - master

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags)
          echo "::set-output name=tag::$latest_tag"

      - name: Increment tag version
        id: increment_tag
        run: |
          version=${{ steps.get_latest_tag.outputs.tag }}
          IFS='.' read -r -a parts <<< "$version"
          major="${parts[0]}"
          minor="${parts[1]}"
          patch=$((parts[2]+1))
          new_tag="v$major.$minor.$patch"
          echo "::set-output name=new_tag::$new_tag"

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Your script or command to generate release notes
          # For example, you can use Git commands or scripts to extract commit messages since the last release
          echo "## Release Notes" > release_notes.md
          git log --format="- %s" origin/master...HEAD >> release_notes.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.increment_tag.outputs.new_tag }}  # Use the incremented tag version
          release_name: Release ${{ steps.increment_tag.outputs.new_tag }}  # Use the incremented tag version
          body: |
            ${{ steps.release_notes.outputs.release_notes }}  # Include generated release notes
          draft: false
          prerelease: false
